//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace logicpos.financial.console.qws {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSInterfaceSoap", Namespace="http://tempuri.org/")]
    public partial class WSInterface : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback PingOperationCompleted;
        
        private System.Threading.SendOrPostCallback VersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecurityTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateSecurityTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveSecurityTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearArticleBagOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddItemToArticleBagOperationCompleted;
        
        private System.Threading.SendOrPostCallback PersistFinanceDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPDFOfDocumentMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataTableWithDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSInterface() {
            this.Url = global::logicpos.financial.console.Properties.Settings.Default.logicpos_financial_console_WSInterface_WSInterface;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event PingCompletedEventHandler PingCompleted;
        
        /// <remarks/>
        public event VersionCompletedEventHandler VersionCompleted;
        
        /// <remarks/>
        public event GetSecurityTokenCompletedEventHandler GetSecurityTokenCompleted;
        
        /// <remarks/>
        public event ValidateSecurityTokenCompletedEventHandler ValidateSecurityTokenCompleted;
        
        /// <remarks/>
        public event RemoveSecurityTokenCompletedEventHandler RemoveSecurityTokenCompleted;
        
        /// <remarks/>
        public event ClearArticleBagCompletedEventHandler ClearArticleBagCompleted;
        
        /// <remarks/>
        public event AddItemToArticleBagCompletedEventHandler AddItemToArticleBagCompleted;
        
        /// <remarks/>
        public event PersistFinanceDocumentCompletedEventHandler PersistFinanceDocumentCompleted;
        
        /// <remarks/>
        public event GetPDFOfDocumentMasterCompletedEventHandler GetPDFOfDocumentMasterCompleted;
        
        /// <remarks/>
        public event GetDataTableWithDataCompletedEventHandler GetDataTableWithDataCompleted;
        
        /// <remarks/>
        public event InsertDataCompletedEventHandler InsertDataCompleted;
        
        /// <remarks/>
        public event UpdateDataCompletedEventHandler UpdateDataCompleted;
        
        /// <remarks/>
        public event DeleteDataCompletedEventHandler DeleteDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ping", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Ping() {
            object[] results = this.Invoke("Ping", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        /// <remarks/>
        public void PingAsync(object userState) {
            if ((this.PingOperationCompleted == null)) {
                this.PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingOperationCompleted);
            }
            this.InvokeAsync("Ping", new object[0], this.PingOperationCompleted, userState);
        }
        
        private void OnPingOperationCompleted(object arg) {
            if ((this.PingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingCompleted(this, new PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Version", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Version() {
            object[] results = this.Invoke("Version", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VersionAsync() {
            this.VersionAsync(null);
        }
        
        /// <remarks/>
        public void VersionAsync(object userState) {
            if ((this.VersionOperationCompleted == null)) {
                this.VersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVersionOperationCompleted);
            }
            this.InvokeAsync("Version", new object[0], this.VersionOperationCompleted, userState);
        }
        
        private void OnVersionOperationCompleted(object arg) {
            if ((this.VersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VersionCompleted(this, new VersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSecurityToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSecurityToken(string pLogin, string pPassword) {
            object[] results = this.Invoke("GetSecurityToken", new object[] {
                        pLogin,
                        pPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecurityTokenAsync(string pLogin, string pPassword) {
            this.GetSecurityTokenAsync(pLogin, pPassword, null);
        }
        
        /// <remarks/>
        public void GetSecurityTokenAsync(string pLogin, string pPassword, object userState) {
            if ((this.GetSecurityTokenOperationCompleted == null)) {
                this.GetSecurityTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecurityTokenOperationCompleted);
            }
            this.InvokeAsync("GetSecurityToken", new object[] {
                        pLogin,
                        pPassword}, this.GetSecurityTokenOperationCompleted, userState);
        }
        
        private void OnGetSecurityTokenOperationCompleted(object arg) {
            if ((this.GetSecurityTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecurityTokenCompleted(this, new GetSecurityTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateSecurityToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidateSecurityToken(string pSecurityToken) {
            object[] results = this.Invoke("ValidateSecurityToken", new object[] {
                        pSecurityToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateSecurityTokenAsync(string pSecurityToken) {
            this.ValidateSecurityTokenAsync(pSecurityToken, null);
        }
        
        /// <remarks/>
        public void ValidateSecurityTokenAsync(string pSecurityToken, object userState) {
            if ((this.ValidateSecurityTokenOperationCompleted == null)) {
                this.ValidateSecurityTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateSecurityTokenOperationCompleted);
            }
            this.InvokeAsync("ValidateSecurityToken", new object[] {
                        pSecurityToken}, this.ValidateSecurityTokenOperationCompleted, userState);
        }
        
        private void OnValidateSecurityTokenOperationCompleted(object arg) {
            if ((this.ValidateSecurityTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateSecurityTokenCompleted(this, new ValidateSecurityTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveSecurityToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveSecurityToken(string pSecurityToken) {
            object[] results = this.Invoke("RemoveSecurityToken", new object[] {
                        pSecurityToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveSecurityTokenAsync(string pSecurityToken) {
            this.RemoveSecurityTokenAsync(pSecurityToken, null);
        }
        
        /// <remarks/>
        public void RemoveSecurityTokenAsync(string pSecurityToken, object userState) {
            if ((this.RemoveSecurityTokenOperationCompleted == null)) {
                this.RemoveSecurityTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveSecurityTokenOperationCompleted);
            }
            this.InvokeAsync("RemoveSecurityToken", new object[] {
                        pSecurityToken}, this.RemoveSecurityTokenOperationCompleted, userState);
        }
        
        private void OnRemoveSecurityTokenOperationCompleted(object arg) {
            if ((this.RemoveSecurityTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveSecurityTokenCompleted(this, new RemoveSecurityTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClearArticleBag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ClearArticleBag(string pSecurityToken) {
            object[] results = this.Invoke("ClearArticleBag", new object[] {
                        pSecurityToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ClearArticleBagAsync(string pSecurityToken) {
            this.ClearArticleBagAsync(pSecurityToken, null);
        }
        
        /// <remarks/>
        public void ClearArticleBagAsync(string pSecurityToken, object userState) {
            if ((this.ClearArticleBagOperationCompleted == null)) {
                this.ClearArticleBagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearArticleBagOperationCompleted);
            }
            this.InvokeAsync("ClearArticleBag", new object[] {
                        pSecurityToken}, this.ClearArticleBagOperationCompleted, userState);
        }
        
        private void OnClearArticleBagOperationCompleted(object arg) {
            if ((this.ClearArticleBagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearArticleBagCompleted(this, new ClearArticleBagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddItemToArticleBag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddItemToArticleBag(string pSecurityToken, string pArticle, string pDesignation, decimal pPrice, decimal pDiscount, decimal pVat, string pPlace, string pTable, int pPriceType, int pCode, decimal pQuantity, string pUnitMeasure, string pToken1, string pToken2) {
            object[] results = this.Invoke("AddItemToArticleBag", new object[] {
                        pSecurityToken,
                        pArticle,
                        pDesignation,
                        pPrice,
                        pDiscount,
                        pVat,
                        pPlace,
                        pTable,
                        pPriceType,
                        pCode,
                        pQuantity,
                        pUnitMeasure,
                        pToken1,
                        pToken2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddItemToArticleBagAsync(string pSecurityToken, string pArticle, string pDesignation, decimal pPrice, decimal pDiscount, decimal pVat, string pPlace, string pTable, int pPriceType, int pCode, decimal pQuantity, string pUnitMeasure, string pToken1, string pToken2) {
            this.AddItemToArticleBagAsync(pSecurityToken, pArticle, pDesignation, pPrice, pDiscount, pVat, pPlace, pTable, pPriceType, pCode, pQuantity, pUnitMeasure, pToken1, pToken2, null);
        }
        
        /// <remarks/>
        public void AddItemToArticleBagAsync(string pSecurityToken, string pArticle, string pDesignation, decimal pPrice, decimal pDiscount, decimal pVat, string pPlace, string pTable, int pPriceType, int pCode, decimal pQuantity, string pUnitMeasure, string pToken1, string pToken2, object userState) {
            if ((this.AddItemToArticleBagOperationCompleted == null)) {
                this.AddItemToArticleBagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddItemToArticleBagOperationCompleted);
            }
            this.InvokeAsync("AddItemToArticleBag", new object[] {
                        pSecurityToken,
                        pArticle,
                        pDesignation,
                        pPrice,
                        pDiscount,
                        pVat,
                        pPlace,
                        pTable,
                        pPriceType,
                        pCode,
                        pQuantity,
                        pUnitMeasure,
                        pToken1,
                        pToken2}, this.AddItemToArticleBagOperationCompleted, userState);
        }
        
        private void OnAddItemToArticleBagOperationCompleted(object arg) {
            if ((this.AddItemToArticleBagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddItemToArticleBagCompleted(this, new AddItemToArticleBagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PersistFinanceDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PersistFinanceDocument(string pSecurityToken, string pDocumentType) {
            object[] results = this.Invoke("PersistFinanceDocument", new object[] {
                        pSecurityToken,
                        pDocumentType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PersistFinanceDocumentAsync(string pSecurityToken, string pDocumentType) {
            this.PersistFinanceDocumentAsync(pSecurityToken, pDocumentType, null);
        }
        
        /// <remarks/>
        public void PersistFinanceDocumentAsync(string pSecurityToken, string pDocumentType, object userState) {
            if ((this.PersistFinanceDocumentOperationCompleted == null)) {
                this.PersistFinanceDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPersistFinanceDocumentOperationCompleted);
            }
            this.InvokeAsync("PersistFinanceDocument", new object[] {
                        pSecurityToken,
                        pDocumentType}, this.PersistFinanceDocumentOperationCompleted, userState);
        }
        
        private void OnPersistFinanceDocumentOperationCompleted(object arg) {
            if ((this.PersistFinanceDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PersistFinanceDocumentCompleted(this, new PersistFinanceDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPDFOfDocumentMaster", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPDFOfDocumentMaster(string pSecurityToken, string pOid) {
            object[] results = this.Invoke("GetPDFOfDocumentMaster", new object[] {
                        pSecurityToken,
                        pOid});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPDFOfDocumentMasterAsync(string pSecurityToken, string pOid) {
            this.GetPDFOfDocumentMasterAsync(pSecurityToken, pOid, null);
        }
        
        /// <remarks/>
        public void GetPDFOfDocumentMasterAsync(string pSecurityToken, string pOid, object userState) {
            if ((this.GetPDFOfDocumentMasterOperationCompleted == null)) {
                this.GetPDFOfDocumentMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPDFOfDocumentMasterOperationCompleted);
            }
            this.InvokeAsync("GetPDFOfDocumentMaster", new object[] {
                        pSecurityToken,
                        pOid}, this.GetPDFOfDocumentMasterOperationCompleted, userState);
        }
        
        private void OnGetPDFOfDocumentMasterOperationCompleted(object arg) {
            if ((this.GetPDFOfDocumentMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPDFOfDocumentMasterCompleted(this, new GetPDFOfDocumentMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataTableWithData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDataTableWithData(string pSecurityToken, string pData, string pFilter) {
            object[] results = this.Invoke("GetDataTableWithData", new object[] {
                        pSecurityToken,
                        pData,
                        pFilter});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataTableWithDataAsync(string pSecurityToken, string pData, string pFilter) {
            this.GetDataTableWithDataAsync(pSecurityToken, pData, pFilter, null);
        }
        
        /// <remarks/>
        public void GetDataTableWithDataAsync(string pSecurityToken, string pData, string pFilter, object userState) {
            if ((this.GetDataTableWithDataOperationCompleted == null)) {
                this.GetDataTableWithDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataTableWithDataOperationCompleted);
            }
            this.InvokeAsync("GetDataTableWithData", new object[] {
                        pSecurityToken,
                        pData,
                        pFilter}, this.GetDataTableWithDataOperationCompleted, userState);
        }
        
        private void OnGetDataTableWithDataOperationCompleted(object arg) {
            if ((this.GetDataTableWithDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataTableWithDataCompleted(this, new GetDataTableWithDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertData(string pSecurityToken, string pData, string[] pParams, string[] pValues) {
            object[] results = this.Invoke("InsertData", new object[] {
                        pSecurityToken,
                        pData,
                        pParams,
                        pValues});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDataAsync(string pSecurityToken, string pData, string[] pParams, string[] pValues) {
            this.InsertDataAsync(pSecurityToken, pData, pParams, pValues, null);
        }
        
        /// <remarks/>
        public void InsertDataAsync(string pSecurityToken, string pData, string[] pParams, string[] pValues, object userState) {
            if ((this.InsertDataOperationCompleted == null)) {
                this.InsertDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDataOperationCompleted);
            }
            this.InvokeAsync("InsertData", new object[] {
                        pSecurityToken,
                        pData,
                        pParams,
                        pValues}, this.InsertDataOperationCompleted, userState);
        }
        
        private void OnInsertDataOperationCompleted(object arg) {
            if ((this.InsertDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDataCompleted(this, new InsertDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateData(string pSecurityToken, string pData, string pOid, string[] pParams, string[] pValues) {
            object[] results = this.Invoke("UpdateData", new object[] {
                        pSecurityToken,
                        pData,
                        pOid,
                        pParams,
                        pValues});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDataAsync(string pSecurityToken, string pData, string pOid, string[] pParams, string[] pValues) {
            this.UpdateDataAsync(pSecurityToken, pData, pOid, pParams, pValues, null);
        }
        
        /// <remarks/>
        public void UpdateDataAsync(string pSecurityToken, string pData, string pOid, string[] pParams, string[] pValues, object userState) {
            if ((this.UpdateDataOperationCompleted == null)) {
                this.UpdateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDataOperationCompleted);
            }
            this.InvokeAsync("UpdateData", new object[] {
                        pSecurityToken,
                        pData,
                        pOid,
                        pParams,
                        pValues}, this.UpdateDataOperationCompleted, userState);
        }
        
        private void OnUpdateDataOperationCompleted(object arg) {
            if ((this.UpdateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDataCompleted(this, new UpdateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteData(string pSecurityToken, string pData, string pOid) {
            object[] results = this.Invoke("DeleteData", new object[] {
                        pSecurityToken,
                        pData,
                        pOid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDataAsync(string pSecurityToken, string pData, string pOid) {
            this.DeleteDataAsync(pSecurityToken, pData, pOid, null);
        }
        
        /// <remarks/>
        public void DeleteDataAsync(string pSecurityToken, string pData, string pOid, object userState) {
            if ((this.DeleteDataOperationCompleted == null)) {
                this.DeleteDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDataOperationCompleted);
            }
            this.InvokeAsync("DeleteData", new object[] {
                        pSecurityToken,
                        pData,
                        pOid}, this.DeleteDataOperationCompleted, userState);
        }
        
        private void OnDeleteDataOperationCompleted(object arg) {
            if ((this.DeleteDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDataCompleted(this, new DeleteDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PingCompletedEventHandler(object sender, PingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void VersionCompletedEventHandler(object sender, VersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSecurityTokenCompletedEventHandler(object sender, GetSecurityTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecurityTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecurityTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidateSecurityTokenCompletedEventHandler(object sender, ValidateSecurityTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateSecurityTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateSecurityTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RemoveSecurityTokenCompletedEventHandler(object sender, RemoveSecurityTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveSecurityTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveSecurityTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClearArticleBagCompletedEventHandler(object sender, ClearArticleBagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearArticleBagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearArticleBagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddItemToArticleBagCompletedEventHandler(object sender, AddItemToArticleBagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddItemToArticleBagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddItemToArticleBagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PersistFinanceDocumentCompletedEventHandler(object sender, PersistFinanceDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PersistFinanceDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PersistFinanceDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPDFOfDocumentMasterCompletedEventHandler(object sender, GetPDFOfDocumentMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPDFOfDocumentMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPDFOfDocumentMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDataTableWithDataCompletedEventHandler(object sender, GetDataTableWithDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataTableWithDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataTableWithDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertDataCompletedEventHandler(object sender, InsertDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateDataCompletedEventHandler(object sender, UpdateDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteDataCompletedEventHandler(object sender, DeleteDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591